load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_proto_library", "cc_test")
load("@rules_proto//proto:defs.bzl", "proto_library")
load("@com_github_grpc_grpc//bazel:cc_grpc_library.bzl", "cc_grpc_library")

cc_library(
    name = "common_lib",
    hdrs = glob(["src/common/*.h"]),
    srcs = glob(["src/common/*.cc"]),
    strip_include_prefix = "//src",
    visibility = ["//visibility:public"],
    deps = ["@com_github_spdlog//:spdlog"],
)

# RPC gRPC lib.
cc_grpc_library(
    name = "rpc_cc_grpc",
    srcs = ["//src/protobuf:rpc_proto"],            
    grpc_only = True,
    deps = [
        "//src/protobuf:rpc_cc_proto"
    ],
)

cc_library(
    name = "metable_server_lib",
    hdrs = glob(["src/server/*.h"]),
    srcs = glob(["src/server/metable_server.cc",]),
    strip_include_prefix = "//src",
    visibility = ["//visibility:public"],
    deps = [
        ":common_lib",
        ":rpc_cc_grpc",
        "@com_github_grpc_grpc//:grpc++",
    ],
)

cc_library(
    name = "metable_client_lib",
    hdrs = glob(["src/client/*.h"]),
    srcs = glob(["src/client/metable_client.cc",]),
    strip_include_prefix = "//src",
    visibility = ["//visibility:public"],
    deps = [
        ":common_lib",
        ":rpc_cc_grpc",
        "@com_github_grpc_grpc//:grpc++",
    ],
)

cc_binary(
    name = "metable_server",
    srcs = glob([
        "src/server/server_main.cc",
        ]),
    deps = [
        ":metable_server_lib",
        ":common_lib",
        ":rpc_cc_grpc",
        "@com_github_grpc_grpc//:grpc++",
    ],
)

cc_binary(
    name = "metable_client",
    srcs = glob(["src/client/client_main.cc"]),
    deps = [
        ":metable_client_lib",
        ":common_lib",
        ":rpc_cc_grpc",
        "@com_github_grpc_grpc//:grpc++",
    ],
)
